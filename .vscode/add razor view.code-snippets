{
	// Place your OliveShop workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"Add Razor view":
	{
		"scope":"cshtml",
		"perfix":"AdView",
		"body":
		[
			"@model OliveShop.Models.LoginviewModel

			@{
				ViewData["Title"] = "Login";
			}
			
			<h1>ورود به سایت</h1>
			<hr />
			<div class="row">
				<div class="col-md-12">
					<form asp-action="Login">
						<div asp-validation-summary="ModelOnly" class="text-danger"></div>
						<div class="form-group">
							<label asp-for="Email" class="control-label"></label>
							<input asp-for="Email" class="form-control" />
							<span asp-validation-for="Email" class="text-danger"></span>
						</div>
						<div class="form-group">
							<label asp-for="Password" class="control-label"></label>
							<input asp-for="Password" class="form-control" />
							<span asp-validation-for="Password" class="text-danger"></span>
						</div>
						<div class="form-group form-check">
							<label class="form-check-label">
								<input class="form-check-input" asp-for="Remember" /> @Html.DisplayNameFor(model => model.Remember)
							</label>
						</div>
						<div class="form-group">
							<input type="submit" value="ورود" class="btn btn-primary" />
							
						  
						</div>
					</form>
				</div>
			</div>"
			
		]

	}
	
}
