// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OliveShop.Data;

namespace OliveShop.Migrations
{
    [DbContext(typeof(OliveshopContext))]
    [Migration("20200724114755_initmigrations")]
    partial class initmigrations
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CategoritoProduct", b =>
                {
                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.HasKey("CategoryId", "ProductID");

                    b.HasIndex("ProductID");

                    b.ToTable("CategoritoProducts");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            ProductID = 1
                        },
                        new
                        {
                            CategoryId = 2,
                            ProductID = 1
                        },
                        new
                        {
                            CategoryId = 1,
                            ProductID = 2
                        },
                        new
                        {
                            CategoryId = 2,
                            ProductID = 2
                        },
                        new
                        {
                            CategoryId = 1,
                            ProductID = 3
                        },
                        new
                        {
                            CategoryId = 2,
                            ProductID = 3
                        });
                });

            modelBuilder.Entity("OliveShop.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("CategoryId");

                    b.ToTable("categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Description = "گروه لباسهای ورزشی",
                            Name = "لباسهاس ورزشی"
                        },
                        new
                        {
                            CategoryId = 2,
                            Description = "گروه لوازم خانگی",
                            Name = "لوازم خانگی"
                        });
                });

            modelBuilder.Entity("OliveShop.Models.Item", b =>
                {
                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.Property<int>("QuantitiInStock")
                        .HasColumnType("int");

                    b.HasKey("ItemId");

                    b.ToTable("items");

                    b.HasData(
                        new
                        {
                            ItemId = 1,
                            Price = 5000m,
                            QuantitiInStock = 100
                        },
                        new
                        {
                            ItemId = 2,
                            Price = 3000m,
                            QuantitiInStock = 60
                        },
                        new
                        {
                            ItemId = 3,
                            Price = 4000m,
                            QuantitiInStock = 40
                        });
                });

            modelBuilder.Entity("OliveShop.Models.Product", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("ProductID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductID = 1,
                            Description = "mahsol",
                            ItemId = 1,
                            ProductName = "محصول شماره 1"
                        },
                        new
                        {
                            ProductID = 2,
                            Description = "mahsol2",
                            ItemId = 2,
                            ProductName = "محصول شماره 2"
                        },
                        new
                        {
                            ProductID = 3,
                            Description = "mahsol3",
                            ItemId = 3,
                            ProductName = "محصول شماره 3 "
                        });
                });

            modelBuilder.Entity("User", b =>
                {
                    b.Property<int>("Userid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Userid");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CategoritoProduct", b =>
                {
                    b.HasOne("OliveShop.Models.Category", "Category")
                        .WithMany("MyProperty")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OliveShop.Models.Product", "product")
                        .WithMany("categoritoProducts")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OliveShop.Models.Item", b =>
                {
                    b.HasOne("OliveShop.Models.Product", "product")
                        .WithOne("item")
                        .HasForeignKey("OliveShop.Models.Item", "ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
